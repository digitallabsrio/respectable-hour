package main
import "math"
import "fmt"

func CountSort(data []int, lowerRange int, upperRange int) { 
  rng := upperRange - lowerRange
  size := len(data)
  count := make([]int, rng)
    for i := 0; i < size; i++ {
        count[data[i]-lowerRange]++
    }
    j := 0
    for i := 0; i < rng; i++ {
        for ; count[i] > 0; count[i]-- {
            data[j] = i + lowerRange
            j++
        }
    }
}

func FindMinAndMax(data []int) (int, int){
  min := math.MaxInt64
  max := math.MinInt64

  for i := 0; i < len(data); i++ {
    if data[i] < min{
      min = data[i]
    }
    if data[i] > max{
      max = data[i]
    }
  }
  return min, max
}

//Testing Code
func main() {
  data := []int{23, 24, 22, 21, 26, 25, 27, 28, 21, 21}
  min, max := FindMinAndMax(data)
  CountSort(data, min, max+1)
  fmt.Println(data)
}