package main

import ("fmt")

func QuickSelect(arr []int, lower int, upper int, k int) int { 
  if (k > 0 && k <= upper - lower + 1) { 
    pivot := arr[upper]                                                          // last element as pivot
  	start := lower
  	stop := lower
	for stop <= upper - 1 {                                                      // partitioning
	  if arr[stop] <= pivot {
		swap(arr, start, stop)
		start++
	  }
      stop++
	}
  	swap(arr, start, upper)
	pivotindex := start
	if (pivotindex - lower == k - 1) {
	  return arr[pivotindex]                                                     // return kth element
	}
	if (pivotindex - lower > k - 1) {
	  return QuickSelect(arr, lower, pivotindex - 1, k)                          // find element in left subarray
	} else {
	  return QuickSelect(arr, pivotindex + 1, upper, k - pivotindex + lower - 1) // find element in right subarray
    }
  }
  fmt.Println("The value of k is out of range")
  return -1                                                                      // returning arbitrary value 
}

func swap(arr []int, first int, second int) { 
  arr[first], arr[second] = arr[second], arr[first]
}

func main() {
  arr := []int{9, 1, 8, 2, 7, 3, 6, 4, 5}
  size := len(arr)
  fmt.Println("Fifth value is :", QuickSelect(arr, 0, size-1, 5))                // here k = 5
}