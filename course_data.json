{
  "course_name": "Data Structures & Algorithms In Go - Learn Interactively",
  "course_overview": "Data structures and algorithms are central concepts of computer science in general and software development in particular. Logging, transforming, and analyzing data are core skills in both real-world applications and coding interviews.\n\nThis course is a detailed guide for data structures and algorithms with specific applications in the Go programming language. You’ll learn basic data structures starting with arrays, stacks, queues, hash tables, and trees. You’ll then process the data with common techniques, including greedy algorithms and dynamic programming. At each step, you’ll review implementation details with consideration for time complexity, hands-on coding exercises, and thorough explanations of the principles at hand.\n\nBy the end of this course, you’ll have the confidence to solve any problem using the fundamentals of computer programming in Go.",
  "course_folder": "data structures algorithms in go",
  "course_lessons": [
    "0-who should take this course and why",
    "1-introduction and asymptotic analysis",
    "2-big o omega and theta notations",
    "3-complexity analysis of algorithms",
    "4-time complexity order",
    "5-deriving an algorithm s runtime function",
    "6-examples related to time complexities",
    "7-master theorem",
    "8-master theorem examples",
    "9-quiz",
    "10-challenge sum array",
    "11-solution review sum array",
    "12-challenge sequential search",
    "13-solution review sequential search",
    "14-challenge binary search",
    "15-solution review binary search",
    "16-challenge finding the largest sum subarray",
    "17-solution review finding the largest sum subarray",
    "18-challenge rotating an array by k positions",
    "19-solution review rotating an array by k positions",
    "20-challenge array waveform",
    "21-solution review array waveform",
    "22-challenge index array",
    "23-solution review index array",
    "24-challenge sorting from 1 to n",
    "25-solution review sorting from 1 to n",
    "26-challenge smallest positive missing number",
    "27-solution review smallest positive missing number",
    "28-challenge maximum minimum array",
    "29-solution review maximum minimum array",
    "30-challenge array index maximum difference",
    "31-solution review array index maximum difference",
    "32-quiz arrays",
    "33-recursive functions",
    "34-challenge factorial",
    "35-solution review factorial",
    "36-challenge print base 16 integers",
    "37-solution review print base 16 integers",
    "38-challenge greatest common divisor",
    "39-solution review greatest common divisor",
    "40-challenge fibonacci numbers",
    "41-solution review fibonacci numbers",
    "42-challenge all permutations of an integer list",
    "43-solution review all permutations of an integer list",
    "44-challenge tower of hanoi",
    "45-solution review tower of hanoi",
    "46-quiz recursion",
    "47-introduction and constraints",
    "48-idea generation",
    "49-complexities coding and testing",
    "50-example and summary",
    "51-abstract data type",
    "52-go collection framework",
    "53-stack",
    "54-queue",
    "55-tree",
    "56-priority queue heap",
    "57-hash table",
    "58-dictionary",
    "59-set and counter",
    "60-symbol table",
    "61-graph",
    "62-introduction",
    "63-sorting algorithm",
    "64-bubble sort",
    "65-modified bubble sort",
    "66-insertion sort",
    "67-selection sort",
    "68-merge sort",
    "69-quick sort",
    "70-quick select",
    "71-count sort",
    "72-external sort external merge sort",
    "73-stable sort",
    "74-choosing the best sorting algorithm",
    "75-challenge partitioning of 0s and 1s",
    "76-solution review partitioning of 0s and 1s",
    "77-challenge partitioning of 0s 1s and 2s",
    "78-solution review partitioning of 0s 1s and 2s",
    "79-introduction to stack",
    "80-the stack abstract data type",
    "81-challenge stack using array",
    "82-solution review stack using array",
    "83-challenge stack using linked list",
    "84-solution review stack using linked list",
    "85-system stack and method calls",
    "86-challenge sorted insert",
    "87-solution review sorted insert",
    "88-challenge sort stack",
    "89-solution review sort stack",
    "90-challenge bottom insert",
    "91-solution review bottom insert",
    "92-challenge reverse stack",
    "93-solution review reverse stack",
    "94-challenge reverse k elements in a stack",
    "95-solution review reverse k element in a stack",
    "96-challenge balanced parentheses",
    "97-solution review balanced parenthesis",
    "98-challenge min stack",
    "99-solution review min stack",
    "100-challenge max depth parenthesis",
    "101-solution review max depth parenthesis",
    "102-challenge longest continuous balanced parenthesis",
    "103-solution review longest continuous balanced parenthesis",
    "104-challenge reverse parenthesis",
    "105-solution review reverse parentheses",
    "106-challenge find duplicate parentheses",
    "107-solution review find duplicate parenthesis",
    "108-challenge print parenthesis number",
    "109-solution review print parentheses number",
    "110-infix prefix and postfix expressions",
    "111-challenge infix to postfix conversion",
    "112-solution review infix to postfix conversion",
    "113-challenge infix to prefix conversion",
    "114-solution review infix to prefix conversion",
    "115-educative interactive courses for software d",
    "115-introduction to queue",
    "116-queue implementation using an array",
    "117-queue implementation using a linkedlist",
    "118-queue implementation using circular linked list",
    "119-queue implementation using doubly linked list",
    "120-challenge queue using stack",
    "121-solution review queue using stack",
    "122-challenge reverse queue",
    "123-solution review reverse queue",
    "124-challenge reverse k elements in a queue",
    "125-solution review reverse k elements in a queue",
    "126-introduction to tree",
    "127-types of trees",
    "128-introduction to binary trees",
    "129-challenge create a complete binary tree",
    "130-solution review create a complete binary tree",
    "131-challenge print pre order traversal",
    "132-solution review print pre order traversal",
    "133-challenge print post order traversal",
    "134-solution review print post order traversal",
    "135-challenge print in order traversal",
    "136-solution review print in order traversal",
    "137-challenge print level order traversal",
    "138-solution review print level order traversal",
    "139-challenge print depth first without recursion",
    "140-solution review print depth first without using the recursion",
    "141-challenge print level order line by line using two queues",
    "142-solution review print level order line by line using two queues",
    "143-challenge print a tree in level order line by line using a queue",
    "144-solution review print level order line by line using one queue",
    "145-challenge print spiral tree",
    "146-solution review print spiral tree",
    "147-challenge nth pre order",
    "148-solution review nth pre order",
    "149-challenge nth post order",
    "150-solution review nth post order",
    "151-challenge nth in order",
    "152-solution review nth in order",
    "153-challenge print all the paths",
    "154-educative interactive courses for software d",
    "154-solution review print all the paths",
    "155-challenge number of elements",
    "156-solution review number of elements",
    "157-challenge sum of all nodes in a binary tree",
    "158-solution review sum of all nodes in a binary tree",
    "159-challenge find number of leaf nodes",
    "160-solution review find number of leaf nodes",
    "161-challenge number of full nodes in a binary tree",
    "162-solution review number of full nodes in a binary tree",
    "163-challenge search value in a binary tree",
    "164-solution review search value in a binary tree",
    "165-challenge find max in binary tree",
    "166-solution review find max in binary tree",
    "167-challenge tree depth",
    "168-solution review tree depth",
    "169-challenge identical trees",
    "170-solution review identical trees",
    "171-challenge copy tree",
    "172-solution review copy tree",
    "173-challenge copy mirror tree",
    "174-solution review copy mirror tree",
    "175-challenge free tree",
    "175-educative interactive courses for software d",
    "176-solution review free tree",
    "177-challenge check completeness of tree using queue",
    "178-solution review check completeness of tree using queue",
    "179-challenge check completeness of tree using recursion",
    "180-solution review check completeness of tree using recursion",
    "181-challenge is tree a heap",
    "182-solution review is tree a heap",
    "183-challenge tree to list conversion using recursion",
    "184-solution review tree to list conversion using recursion",
    "185-introduction to a binary search tree bst",
    "186-challenge create a binary search tree from the sorted list",
    "187-solution review create a binary search tree from the sorted list",
    "188-challenge insertion",
    "189-solution review insertion",
    "190-challenge find node",
    "191-solution review find node",
    "192-challenge find min",
    "193-solution review find min",
    "194-challenge find max",
    "195-solution review find max",
    "196-challenge is it a bst",
    "197-solution review is it a bst",
    "198-challenge delete node",
    "199-solution review delete node",
    "200-challenge least common ancestor",
    "201-solution review least common ancestor",
    "202-challenge print tree nodes within a range",
    "203-solution review print tree nodes within a range",
    "204-challenge trim the tree nodes outside range",
    "205-solution review trim the tree nodes outside range",
    "206-challenge find ceil and floor values in a bst",
    "207-solution review find ceil and floor values in a bst",
    "208-challenge is it a bst array",
    "209-solution review is it a bst array"
  ],
  "repo_name": "respectable-hour"
}
